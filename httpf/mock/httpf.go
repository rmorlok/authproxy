// Code generated by MockGen. DO NOT EDIT.
// Source: ./interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gentleman "gopkg.in/h2non/gentleman.v2"
)

// MockF is a mock of F interface.
type MockF struct {
	ctrl     *gomock.Controller
	recorder *MockFMockRecorder
}

// MockFMockRecorder is the mock recorder for MockF.
type MockFMockRecorder struct {
	mock *MockF
}

// NewMockF creates a new mock instance.
func NewMockF(ctrl *gomock.Controller) *MockF {
	mock := &MockF{ctrl: ctrl}
	mock.recorder = &MockFMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockF) EXPECT() *MockFMockRecorder {
	return m.recorder
}

// NewTopLevel mocks base method.
func (m *MockF) NewTopLevel() *gentleman.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewTopLevel")
	ret0, _ := ret[0].(*gentleman.Client)
	return ret0
}

// NewTopLevel indicates an expected call of NewTopLevel.
func (mr *MockFMockRecorder) NewTopLevel() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewTopLevel", reflect.TypeOf((*MockF)(nil).NewTopLevel))
}
